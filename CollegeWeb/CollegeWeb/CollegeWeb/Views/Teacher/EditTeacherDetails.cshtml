@model CollegeWeb.Models.EditViewModel
@{
    ViewBag.Title = "EditTeacherDetails";
}

<h2>EditTeacherDetails</h2>
@using (Html.BeginForm())

{

    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.AddressId)
    @Html.HiddenFor(model => model.ConfirmPassword)
    @Html.HiddenFor(model => model.CountryName)
    @Html.HiddenFor(model => model.StateName)
    @Html.HiddenFor(model => model.CityName)
    @Html.HiddenFor(model => model.CourseId)
    @Html.HiddenFor(model => model.RoleId)
    @Html.HiddenFor(model => model.RoleName)
    @Html.HiddenFor(model => model.SubjectId)
    @Html.HiddenFor(model => model.SubjectName)
    @Html.HiddenFor(model => model.Password)
    @Html.HiddenFor(model => model.DateCreated)
    @Html.HiddenFor(model => model.DateModified)
    @Html.HiddenFor(model => model.IsEmailVerified)
    @Html.HiddenFor(model => model.IsActive)
    @Html.HiddenFor(model => model.CourseName)






    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10 pull-right">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10 pull-right">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10 pull-right">
            Male: @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
            Female: @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10 pull-right">
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10 pull-right">
            @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10 pull-right">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.AddressLine, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-10 pull-right">
            @Html.TextAreaFor(model => model.AddressLine, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine, "", new { @class = "text-danger" })
        </div>
    </div>

    @*get country dropdown*@
    
    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
           </div>
        <div class="col-md-10 pull-right">
                @Html.DropDownListFor(model => model.CountryId, Model.Countries.Select(item => new SelectListItem
           {
               Value = item.CountryId.ToString(),
               Text = item.CountryName.ToString()

           }), new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })


            </div>
        </div>

        @*get state dropdown*@
       

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.StateId, "State", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
    <div class="col-md-10 pull-right">
                @Html.DropDownListFor(model => model.StateId, Model.States.Select(item => new SelectListItem
           {
               Value = item.StateId.ToString(),
               Text = item.StateName.ToString()

           }), new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })


            </div>
        </div>
        @*get city dropdown*@
       
    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.CityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
            
            </div>
        <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, Model.Cities.Select(item => new SelectListItem
           {
               Value = item.CityId.ToString(),
               Text = item.CityName.ToString()

           }), new { @class = "control-label col-md-2"})
                @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })


            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Pincode, "Pincode", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-10 pull-right">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
        </div>



        @*<div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-10 pull-right">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group row">
            <div class="col-md-3">

                <input type="submit" value="Edit" class="btn btn-success" />

            </div>
            <div class="col-md-9">
                <a type="button" class="btn btn-primary btn-sm" href="@Url.Action("TeacherHomePage","Teacher",new { id = Model.UserId })">
                    <span class="glyphicon glyphicon-list"></span>
                    <span>Back To Home Page</span>
                </a>
            </div>
        </div>





        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
        }




