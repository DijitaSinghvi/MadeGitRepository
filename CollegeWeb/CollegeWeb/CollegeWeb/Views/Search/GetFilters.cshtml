@model CollegeWeb.Models.SearchModel
  
@{
    ViewBag.Title = "SearchPage";
}

<h2>SearchPage</h2>
@using (Html.BeginForm())
{


<div class="container-fluid">
    <h3>Filters:</h3>
    <div class="row">
        <div class="col-sm-6">

            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-sm-6">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-sm-6">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Male: @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
                Female: @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="col-sm-6">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>

        </div>

    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class=" col-sm-6">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(model => model.IsEmailVerified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.IsEmailVerified, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsEmailVerified, "", new { @class = "text-danger" })



            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.CourseId, Model.Courses.Select(x => new SelectListItem
           {
               Text = x.CourseName.ToString(),
               Value = x.CourseId.ToString()
           }))
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.AddressLine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.TextAreaFor(model => model.AddressLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressLine, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class-="col-sm-6">
                @Html.DropDownListFor(model => model.CountryId, Model.Countries.Select(x => new SelectListItem
           {
               Text = x.CountryName,
               Value = x.CountryId.ToString()

           }))
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.StateId, Model.States.Select(x => new SelectListItem
           {
               Text = x.StateName,
               Value = x.StateId.ToString()
           }))
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(model => model.CityId)
            @Html.DropDownListFor(model => model.CityId, Model.Cities.Select(x => new SelectListItem
       {
           Text = x.CityName,
           Value = x.CityId.ToString()
       }))
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })


        </div>

    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.LabelFor(model => model.DateModified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DateModified, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateModified, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.RoleId, Model.Roles.Select(x => new SelectListItem
           {
               Text = x.RoleName,
               Value = x.RoleId.ToString()
           }))
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-success" />
            </div>
        </div>

    </div>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOfBirth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hobbies)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsEmailVerified)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateModified)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.AddressLine)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CityName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StateName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CountryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pincode)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.RoleName)
            </th>

        </tr>
        @foreach (var item in Model.ShowLists)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hobbies)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsEmailVerified)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateModified)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AddressLine)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StateName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CountryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pincode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoleName)
            </td>
        </tr>
        }

    </table>


    @*@{ Html.RenderPartial("_SearchResultPartial",Model);
    }*@

</div>
}
