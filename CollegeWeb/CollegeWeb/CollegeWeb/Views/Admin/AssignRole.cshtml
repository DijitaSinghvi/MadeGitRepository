
@{
    ViewBag.Title = "AssignRole";
}

<h2>Assign Other Role</h2>
@model CollegeWeb.Models.ViewModel






@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h4>Assign Role</h4>
    <hr />

    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.AddressId)
    @Html.HiddenFor(model => model.ConfirmPassword)
    @Html.HiddenFor(model => model.Gender)
    @Html.HiddenFor(model => model.DateOfBirth)
    @Html.HiddenFor(model => model.Hobbies)
    @Html.HiddenFor(model => model.Email)
    @Html.HiddenFor(model => model.Password)
    @Html.HiddenFor(model => model.AddressLine)
    @Html.HiddenFor(model => model.CountryId)
    @Html.HiddenFor(model => model.StateId)
    @Html.HiddenFor(model => model.CityId)
    @Html.HiddenFor(model => model.Pincode)
    @Html.HiddenFor(model => model.CourseId)
    @Html.HiddenFor(model => model.IsEmailVerified)
    @Html.HiddenFor(model => model.RoleName)


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.RoleId,Model.Roles.Select(item => new SelectListItem
       {
           Value = item.RoleId.ToString(),
           Text = item.RoleName.ToString()

       }))
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>


    @*<div class="form-group">
                  , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Male: @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
                Female: @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>






        <div class="form-group">
            @Html.LabelFor(model => model.AddressLine, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AddressLine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressLine, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*get country dropdown
        @*<div class="form-group">
            @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, Model.Countries.Select(item => new SelectListItem
           {
               Value = item.CountryId.ToString(),
               Text = item.CountryName.ToString()

           })/*, new { @class = "control-label col-md-2", @Id = "ddlCountry" }*/)
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })


            </div>
        </div>*@

    @*get state dropdown*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.StateId, "State", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StateId, Model.States.Select(item => new SelectListItem
           {
               Value = item.StateId.ToString(),
               Text = item.StateName.ToString()

           })/*, new { @class = "control-label col-md-2", @id = "ddlStateData" }*/)
                @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })


            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.CityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityId, Model.Cities.Select(item => new SelectListItem
           {
               Value = item.CityId.ToString(),
               Text = item.CityName.ToString()

           })/*, new { @class = "control-label col-md-2", @id = "ddlCity" }*/)
                @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })


            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Pincode, "Pincode", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">



                @Html.DropDownListFor(model => model.CourseId, Model.Courses.Select(item => new SelectListItem
           {
               Value = item.CourseId.ToString(),
               Text = item.CourseName.ToString()

           }))



                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })


            </div>
        </div>*@







    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Assign" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    <a type="button" class="btn btn-primary btn-sm" href="@Url.Action("ViewUserAndRoles","Admin")">
        <span class="glyphicon glyphicon-list"></span>
        <span>Back To List</span>
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




